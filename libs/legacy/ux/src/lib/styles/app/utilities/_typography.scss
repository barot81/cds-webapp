@use '@angular/material' as mat;
@use 'sass:math';

// -----------------------------------------------------------------------------------------------------
// @ Theming
// -----------------------------------------------------------------------------------------------------
@mixin typography-theme($theme) {
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);
  $accent: map-get($theme, accent);
  $is-dark: map-get($theme, is-dark);
  $primary: map-get($theme, primary);

  .secondary_title {
    font-size: px-to-rem(14) !important;
    font-weight: 600 !important;
    color: map-get($map: $foreground, $key: secondary-title) !important;
  }

  .tertiary_title {
    font-size: px-to-rem(14) !important;
    font-weight: 600 !important;
  }

  .gray-text-color {
    color: map-get($map: $foreground, $key: secondary-text) !important;
  }

  .text-color {
    color: map-get($map: $foreground, $key: text) !important;
  }

  a:not(.mat-tab-link),
  .link-btn {
    color: mat.get-color-from-palette($primary, text);
    font-weight: normal;
    &[disabled] {
      color: map-get($map: $foreground, $key: disabled-text) !important;
      cursor: not-allowed !important;
    }
  }
  .card-link-btn {
    color: inherit !important;
  }

  code {
    &:not(.highlight) {
      background-color: map-get($background, app-bar);
    }
  }

  .changelog {
    .entry {
      background-color: map-get($background, card);
    }
  }

  .text-boxed {
    @if ($is-dark) {
      background-color: rgba(255, 255, 255, 0.12);
      color: rgba(255, 255, 255, 0.54);
    } @else {
      background-color: rgba(0, 0, 0, 0.12);
      color: rgba(0, 0, 0, 0.54);
    }
  }
}

// -----------------------------------------------------------------------------------------------------
// @ Typography
// -----------------------------------------------------------------------------------------------------

// Angular Material typography
$typography: mat.define-typography-config(
  $font-family: 'Source Sans Pro, sans-serif',
  $title: mat.define-typography-level(20px, 32px, 600),
  $body-2: mat.define-typography-level(14px, 24px, 600),
  $button: mat.define-typography-level(14px, 14px, 600),
  $input: mat.define-typography-level(16px, 1.125, 400),
);

// Setup the typography
@include mat.all-component-typographies($typography);

// -----------------------------------------------------------------------------------------------------
// @ Typography
// -----------------------------------------------------------------------------------------------------

html {
  font-size: 62.5%;
  font-family: 'Source Sans Pro', sans-serif !important;
  line-height: 1.4 !important;
  letter-spacing: -0.1px !important;
}

body {
  font-size: px-to-rem(14);
}

html,
body {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

// Headings
h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-weight: normal;
  padding: 0px;
  margin: 0px;
}

p,
.p {
  padding: 0px;
  margin: 0px;
}

.font-24 {
  font-size: px-to-rem(24) !important;
}

.font-22 {
  font-size: px-to-rem(22) !important;
}

h1,
.h1,
.font-20 {
  font-size: px-to-rem(20) !important;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4 {
  font-weight: 600 !important;
}

h2,
.h2,
.font-18 {
  font-size: px-to-rem(18) !important;
}

.font-b-18 {
  font-size: px-to-rem(18) !important;
  font-weight: 600 !important;
}

h3,
.h3,
.font-16 {
  font-size: px-to-rem(16) !important;
}

.font-b-16 {
  font-size: px-to-rem(16) !important;
  font-weight: 600 !important;
}

h4,
.h4,
.font-14 {
  font-size: px-to-rem(14);
}

h5,
.h5,
.font-12 {
  font-size: px-to-rem(12) !important;
}

h6,
.h6,
.font-10 {
  font-size: px-to-rem(10) !important;
}

p,
.p {
  font-size: px-to-rem(14) !important;
}

.font-40 {
  font-size: px-to-rem(40) !important;
}
// font weights

.font-weight-300 {
  font-weight: 300;
}

.font-weight-500 {
  font-weight: 500;
}

.font-weight-600 {
  font-weight: 600 !important;
  // Specific to Chrome Browser ---
  @media screen and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: 0.001dpcm) {
    -webkit-font-smoothing: antialiased !important;
  }

  // Specific to Safari Browser ---
  @media not all and (min-resolution: 0.001dpcm) {
    @supports (-webkit-appearance: none) and (stroke-color: transparent) {
      -webkit-font-smoothing: auto !important;
    }
  }
}

.font-weight-700 {
  font-weight: 700;
}

.font-weight-800 {
  font-weight: 800;
}
// Links
a {
  text-decoration: none !important;

  &:not(.mat-button):not(.mat-raised-button):not(.mat-flat-button):not(.mat-stroked-button):not(.mat-icon-button):not(.mat-fab):not(.mat-mini-fab) {
    &:hover,
    &:active {
      text-decoration: underline;
    }
  }
}

// Abbr
abbr {
  cursor: help;
  border-bottom: 1px dotted rgba(0, 0, 0, 0.54);
}

// Blockquote
blockquote {
  border-left: 3px solid rgba(0, 0, 0, 0.12);
  font-style: italic;
  margin: 1em 0;
  padding-left: 16px;

  footer {
    font-style: normal;

    &:before {
      content: '\2014 \00A0';
    }
  }

  &.reverse {
    border-left: none;
    border-right: 3px solid rgba(0, 0, 0, 0.12);
    text-align: right;
    padding-left: 0;
    padding-right: 16px;

    footer {
      &:before {
        content: '';
      }

      &:after {
        content: '\2014 \00A0';
      }
    }
  }
}

// Code
code {
  &:not(.highlight) {
    color: $denim;
    padding: 2px 3px;
    border-radius: 2px;
    line-height: 1.7;
  }
}

// Definition lists
dl {
  dt {
    font-weight: bold;
  }

  dd {
    margin: 4px 0 16px 0;
  }
}

// Mark
mark {
  background: $texas;
}

// Pre
pre {
  line-height: 1.6;
  margin: 8px 16px;
  white-space: pre-wrap;
}

// Small
small {
  font-size: 80%;
}

// Table
table {
  thead {
    tr {
      th {
        text-align: left;
      }
    }
  }
}

// Text format helpers
.text-italic {
  font-style: italic;
}

.text-semibold {
  font-weight: 600;
}

.text-bold,
strong {
  font-weight: 700;
}

.text-strike {
  text-decoration: line-through;
}

.text-super {
  vertical-align: super;
}

.text-sub {
  vertical-align: sub;
}

.text-capitalize {
  text-transform: capitalize;
}

.text-lowercase {
  text-transform: lowercase;
}

.text-uppercase {
  text-transform: uppercase;
}

// Text align helpers
.text-left {
  text-align: left !important;
}

.text-center {
  text-align: center !important;
}

.text-right {
  text-align: right;
}

// Font weight helpers
@for $weight from 1 through 9 {
  .font-weight-#{$weight * 100} {
    font-weight: #{$weight * 100};
  }
}

// Font size helpers
@for $size from 1 through 60 {
  .font-size-#{$size * 2} {
    font-size: #{$size * 2}px;
  }
}

// Line height helpers
@for $lineHeight from 1 through 60 {
  .line-height-#{$lineHeight * 2} {
    line-height: #{$lineHeight * 2}px;
  }
}

.line-height-1 {
  line-height: 1 !important;
}

.line-height-1\.25 {
  line-height: 1.25;
}

.line-height-1\.5,
.line-height-1\.50 {
  line-height: 1.5;
}

.line-height-1\.75 {
  line-height: 1.75;
}

// Letter spacing helpers
.letter-spacing-condensed {
  letter-spacing: -0.02em;
}

.letter-spacing-normal {
  letter-spacing: normal;
}

.letter-spacing-relaxed {
  letter-spacing: 0.02em;
}

// Boxed text
.text-boxed {
  border-radius: 2px;
  padding: 4px 8px;
  margin: 0 8px;
  font-size: px-to-rem(11);
  font-weight: 600;
  white-space: nowrap;
}

// Truncate
.text-truncate {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Nowrap
.text-nowrap {
  white-space: nowrap;
}

.description-text-wrap {
  word-break: break-all;
  white-space: pre-wrap;
  width: 90%;
}

.description-sm-text-wrap {
  @include media-breakpoint('xs') {
    word-break: break-all;
    white-space: pre-wrap;
    width: 90%;
  }
  @include media-breakpoint('sm') {
    word-break: break-all;
    white-space: pre-wrap;
    width: 90%;
  }
}

.word-break-all {
  word-break: break-all;
}

.white-space-normal {
  white-space: normal !important;
}

.white-space-break-spaces {
  white-space: break-spaces !important;
}

.word-break-word {
  word-break: break-word;
}

.space-pre-wrap {
  white-space: pre-wrap;
}

.space-no-wrap {
  white-space: nowrap !important;
}

.sub-header {
  font-size: px-to-rem(16);
  font-weight: 600;
}

.position-relative {
  position: relative !important;
}

.position-inherit {
  position: inherit !important;
}

//used for mat-cards on horizontal wizard control
.height-fit-content {
  height: fit-content !important;
}

.height-xs-auto {
  @include media-breakpoint('xs') {
    height: auto !important;
  }
  @include media-breakpoint('sm') {
    height: auto !important;
  }
}

.height-inherit {
  height: inherit !important;
}

//used for horizontal wizard control to scroll smoothly
.scroll-smooth {
  scroll-behavior: smooth !important;
}

//used for sidebar shadow inside drawer
.box-shadow-right {
  box-shadow: 3px 0 5px -2px rgba(0, 0, 0, 0.14);
}

.icon-blue-color {
  color: $endeavour !important;
}

.truncate-with-hover {
  @include media-breakpoint('gt-md') {
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: 2;
    display: -webkit-box;
    -webkit-box-orient: vertical;
  }
}

.grid_header_truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  text-align: left !important;
  -webkit-line-clamp: 1;
  display: -webkit-box;
  -webkit-box-orient: vertical;
}

.highlight-text {
  background-color: rgb(235, 241, 150) !important;
  font-weight: bold !important;
}

@for $i from 1 through 10 {
  .text-overflow-#{$i} {
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: $i;
    display: -webkit-box;
    -webkit-box-orient: vertical;
  }
}

.readonly-filter {
  @include media-breakpoint('lt-lg') {
    width: 100%;
    overflow-x: auto !important;
    &::-webkit-scrollbar {
      width: 0;
      height: 0;
    }
  }
}

.text-sm-left {
  @include media-breakpoint('xs') {
    text-align: left !important;
  }
  @include media-breakpoint('sm') {
    text-align: left !important;
  }
}
